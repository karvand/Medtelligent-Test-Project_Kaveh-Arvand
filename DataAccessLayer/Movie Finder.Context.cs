//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DataAccessLayer
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class MovieFinderEntities : DbContext
    {
        public MovieFinderEntities()
            : base("name=MovieFinderEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Genre> Genres { get; set; }
        public virtual DbSet<Movie> Movies{ get; set; }
        public virtual DbSet<User> Users { get; set; }
    
        public virtual ObjectResult<Genre> sp_GetGenreById(Nullable<int> genreId)
        {
            var genreIdParameter = genreId.HasValue ?
                new ObjectParameter("GenreId", genreId) :
                new ObjectParameter("GenreId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Genre>("sp_GetGenreById", genreIdParameter);
        }
    
        public virtual ObjectResult<Genre> sp_GetGenreById(Nullable<int> genreId, MergeOption mergeOption)
        {
            var genreIdParameter = genreId.HasValue ?
                new ObjectParameter("GenreId", genreId) :
                new ObjectParameter("GenreId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Genre>("sp_GetGenreById", mergeOption, genreIdParameter);
        }
    
        public virtual ObjectResult<Genre> sp_GetGenreByName(string genreName)
        {
            var genreNameParameter = genreName != null ?
                new ObjectParameter("GenreName", genreName) :
                new ObjectParameter("GenreName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Genre>("sp_GetGenreByName", genreNameParameter);
        }
    
        public virtual ObjectResult<Genre> sp_GetGenreByName(string genreName, MergeOption mergeOption)
        {
            var genreNameParameter = genreName != null ?
                new ObjectParameter("GenreName", genreName) :
                new ObjectParameter("GenreName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Genre>("sp_GetGenreByName", mergeOption, genreNameParameter);
        }
    
        public virtual int sp_UpdateGenre(Nullable<int> genreId, string genreName)
        {
            var genreIdParameter = genreId.HasValue ?
                new ObjectParameter("GenreId", genreId) :
                new ObjectParameter("GenreId", typeof(int));
    
            var genreNameParameter = genreName != null ?
                new ObjectParameter("GenreName", genreName) :
                new ObjectParameter("GenreName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_UpdateGenre", genreIdParameter, genreNameParameter);
        }
    
        public virtual ObjectResult<Movie> sp_GetMoviesByName(string title)
        {
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Movie>("sp_GetMoviesByName", titleParameter);
        }
    
        public virtual ObjectResult<Movie> sp_GetMoviesByName(string title, MergeOption mergeOption)
        {
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Movie>("sp_GetMoviesByName", mergeOption, titleParameter);
        }
    
        public virtual int sp_UpdateMovie(Nullable<int> movieId, string title, Nullable<short> releaseYear, string director, Nullable<int> genreId)
        {
            var movieIdParameter = movieId.HasValue ?
                new ObjectParameter("MovieId", movieId) :
                new ObjectParameter("MovieId", typeof(int));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var releaseYearParameter = releaseYear.HasValue ?
                new ObjectParameter("ReleaseYear", releaseYear) :
                new ObjectParameter("ReleaseYear", typeof(short));
    
            var directorParameter = director != null ?
                new ObjectParameter("Director", director) :
                new ObjectParameter("Director", typeof(string));
    
            var genreIdParameter = genreId.HasValue ?
                new ObjectParameter("GenreId", genreId) :
                new ObjectParameter("GenreId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_UpdateMovie", movieIdParameter, titleParameter, releaseYearParameter, directorParameter, genreIdParameter);
        }
    
        public virtual ObjectResult<Genre> sp_GetGenres()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Genre>("sp_GetGenres");
        }
    
        public virtual ObjectResult<Genre> sp_GetGenres(MergeOption mergeOption)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Genre>("sp_GetGenres", mergeOption);
        }
    
        public virtual ObjectResult<Movie> sp_GetMovieById(Nullable<int> movieId)
        {
            var movieIdParameter = movieId.HasValue ?
                new ObjectParameter("MovieId", movieId) :
                new ObjectParameter("MovieId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Movie>("sp_GetMovieById", movieIdParameter);
        }
    
        public virtual ObjectResult<Movie> sp_GetMovieById(Nullable<int> movieId, MergeOption mergeOption)
        {
            var movieIdParameter = movieId.HasValue ?
                new ObjectParameter("MovieId", movieId) :
                new ObjectParameter("MovieId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Movie>("sp_GetMovieById", mergeOption, movieIdParameter);
        }
    
        public virtual ObjectResult<GetMovies_Result> GetMovies()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetMovies_Result>("GetMovies");
        }
    
        public virtual ObjectResult<GetMovies_Result> GetMoviesByGenre(string genreName)
        {
            var genreNameParameter = genreName != null ?
                new ObjectParameter("GenreName", genreName) :
                new ObjectParameter("GenreName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetMovies_Result>("GetMoviesByGenre", genreNameParameter);
        }
    
        public virtual ObjectResult<string> GetMoviesByKeyword(string keyword)
        {
            var keywordParameter = keyword != null ?
                new ObjectParameter("Keyword", keyword) :
                new ObjectParameter("Keyword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetMoviesByKeyword", keywordParameter);
        }
    
        public virtual ObjectResult<GetMovies_Result> GetMovieCompleteByKeyword(string keyword)
        {
            var keywordParameter = keyword != null ?
                new ObjectParameter("keyword", keyword) :
                new ObjectParameter("keyword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetMovies_Result>("GetMovieCompleteByKeyword", keywordParameter);
        }
    
        public virtual ObjectResult<User> GetUserByUsernamePassword(string username, string password)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<User>("GetUserByUsernamePassword", usernameParameter, passwordParameter);
        }
    
        public virtual ObjectResult<User> GetUserByUsernamePassword(string username, string password, MergeOption mergeOption)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<User>("GetUserByUsernamePassword", mergeOption, usernameParameter, passwordParameter);
        }
    
        public virtual ObjectResult<User> GetUsers()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<User>("GetUsers");
        }
    
        public virtual ObjectResult<User> GetUsers(MergeOption mergeOption)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<User>("GetUsers", mergeOption);
        }
    
        public virtual ObjectResult<User> GetUserByUsername(string username)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<User>("GetUserByUsername", usernameParameter);
        }
    
        public virtual ObjectResult<User> GetUserByUsername(string username, MergeOption mergeOption)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<User>("GetUserByUsername", mergeOption, usernameParameter);
        }
    
        public virtual ObjectResult<User> GetUserByUserId(Nullable<int> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<User>("GetUserByUserId", userIdParameter);
        }
    
        public virtual ObjectResult<User> GetUserByUserId(Nullable<int> userId, MergeOption mergeOption)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<User>("GetUserByUserId", mergeOption, userIdParameter);
        }
    
        public virtual int UpdateUser(Nullable<int> userId, string firstName, string lastName)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateUser", userIdParameter, firstNameParameter, lastNameParameter);
        }
    }
}
